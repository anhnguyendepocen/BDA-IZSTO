with(plasma,
qplot(betadiet, log(betaplasma))
with(plasma,
qplot(betadiet, log(betaplasma)))
with(plasma,
qplot(betadiet, log(betaplasma))) +
geom_abline(simple_bayesian_lm)[,1], simple_bayesian_lm)[,2])
?geom_abline
with(plasma,
qplot(betadiet, log(betaplasma))) +
geom_abline(coef(simple_bayesian_lm))[,1], coef(simple_bayesian_lm))[,2])
with(plasma,
qplot(betadiet, log(betaplasma))) +
geom_abline(intercept = coef(simple_bayesian_lm)[,1], slope = coef(simple_bayesian_lm)[,2])
with(plasma,
qplot(betadiet, log(betaplasma))) +
geom_abline(intercept = coef(simple_bayesian_lm)[,1], slope = coef(simple_bayesian_lm)[,2],
col=rgb(0,0,0,0.05))
with(plasma,
qplot(betadiet, log(betaplasma))) +
geom_abline(intercept = coef(simple_bayesian_lm)[,1], slope = coef(simple_bayesian_lm)[,2],
col=rgb(0,0,0,0.05))
plot1 <- with(plasma,
qplot(betadiet, log(betaplasma))) +
geom_abline(intercept = coef(simple_bayesian_lm)[,1], slope = coef(simple_bayesian_lm)[,2],
col=rgb(0,0,0,0.05))
plot1 <- with(plasma,
qplot(betadiet, log(betaplasma))) +
geom_abline(intercept = quantile(coef(simple_bayesian_lm)[,1], prob = c(0.025, 0.975)),
slope = quantile(coef(simple_bayesian_lm)[,2], prob = c(0.025, 0.975)),
linetype = 2)
plot1 <- with(plasma,
qplot(betadiet, log(betaplasma))) +
geom_abline(intercept = coef(simple_bayesian_lm)[,1], slope = coef(simple_bayesian_lm)[,2],
col=rgb(0,0,0,0.05))
plot2 <- with(plasma,
qplot(betadiet, log(betaplasma))) +
geom_abline(intercept = quantile(coef(simple_bayesian_lm)[,1], prob = c(0.025, 0.975)),
slope = quantile(coef(simple_bayesian_lm)[,2], prob = c(0.025, 0.975)),
linetype = 2)
grid.arrange(plot1, plot2, ncol=2)
plot1 <- with(plasma,
qplot(betadiet, log(betaplasma))) +
geom_abline(intercept = coef(simple_bayesian_lm)[,1], slope = coef(simple_bayesian_lm)[,2],
col=rgb(0,0,0,0.05))
plot2 <- with(plasma,
qplot(betadiet, log(betaplasma))) +
geom_abline(intercept = quantile(coef(simple_bayesian_lm)[,1], prob = c(0.025, 0.975)),
slope = quantile(coef(simple_bayesian_lm)[,2], prob = c(0.025, 0.975)),
linetype = 2)+
geom_abline(intercept = quantile(coef(simple_bayesian_lm)[,1], prob = 0.5),
slope = quantile(coef(simple_bayesian_lm)[,2], prob = .5),
linetype = 1, size = 1.4)+
grid.arrange(plot1, plot2, ncol=2)
plot1 <- with(plasma,
qplot(betadiet, log(betaplasma))) +
geom_abline(intercept = coef(simple_bayesian_lm)[,1], slope = coef(simple_bayesian_lm)[,2],
col=rgb(0,0,0,0.05))
plot2 <- with(plasma,
qplot(betadiet, log(betaplasma))) +
geom_abline(intercept = quantile(coef(simple_bayesian_lm)[,1], prob = c(0.025, 0.975)),
slope = quantile(coef(simple_bayesian_lm)[,2], prob = c(0.025, 0.975)),
linetype = 2)+
geom_abline(intercept = quantile(coef(simple_bayesian_lm)[,1], prob = 0.5),
slope = quantile(coef(simple_bayesian_lm)[,2], prob = .5),
linetype = 1, size = 1.4)
grid.arrange(plot1, plot2, ncol=2)
dim(coef(simple_bayesian_lm))
newdat <- data.frame(x=seq(0, 1000, by = 0.1))
newmodmat <- model.matrix(~x, data=newdat)
fitmat <-  matrix(ncol=1000, nrow=nrow(newdat))
for(i in 1:1000) fitmat[,i] <- newmodmat %*% coef(bsim)[i,]
for(i in 1:1000) fitmat[,i] <- newmodmat %*% coef(simple_bayesian_lm)[i,]
dim(fitmat)
?geom_smooth
plot2 <- with(plasma,
qplot(betadiet, log(betaplasma))) +
geom_smooth(aes(x = newdat$x, y = apply(fitmat, 1, quantile, probs = c(0.025)))
grid.arrange(plot1, plot2, ncol=2)
plot2 <- with(plasma,
qplot(betadiet, log(betaplasma))) +
geom_smooth(aes(x = newdat$x, y = apply(fitmat, 1, quantile, probs = c(0.025))))
grid.arrange(plot1, plot2, ncol=2)
apply(fitmat, 1, quantile, probs = c(0.025))
View(newdat)
with(plasma,
qplot(betadiet, log(betaplasma))) +
geom_abline(intercept = coef(simple_bayesian_lm)[,1], slope = coef(simple_bayesian_lm)[,2],
col=rgb(0,0,0,0.05))
plot1 <- with(plasma,
qplot(betadiet, log(betaplasma))) +
geom_abline(intercept = coef(simple_bayesian_lm)[,1], slope = coef(simple_bayesian_lm)[,2],
col=rgb(0,0,0,0.05))
newdat <- data.frame(x=seq(0, 10000, by = 100))
newmodmat <- model.matrix(~x, data=newdat)
fitmat <-  matrix(ncol=1000, nrow=nrow(newdat))
for(i in 1:1000) fitmat[,i] <- newmodmat %*% coef(simple_bayesian_lm)[i,]
plot2 <- with(plasma,
qplot(betadiet, log(betaplasma))) +
geom_smooth(aes(x = newdat$x, y = apply(fitmat, 1, quantile, probs = c(0.025))))
grid.arrange(plot1, plot2, ncol=2)
plot1 <- with(plasma,
qplot(betadiet, log(betaplasma))) +
geom_abline(intercept = coef(simple_bayesian_lm)[,1], slope = coef(simple_bayesian_lm)[,2],
col=rgb(0,0,0,0.05))
newdat <- data.frame(x=seq(0, 10000, by = 100))
newmodmat <- model.matrix(~x, data=newdat)
fitmat <-  matrix(ncol=1000, nrow=nrow(newdat))
for(i in 1:1000) fitmat[,i] <- newmodmat %*% coef(simple_bayesian_lm)[i,]
plot2 <- with(plasma,
qplot(betadiet, log(betaplasma))) +
geom_smooth(aes(x = newdat$x, y = apply(fitmat, 1, quantile, probs = c(0.025, 0.5, 0.975),
linetype = c(2,1,2), col='black', size =c(1,1.4,1))))
grid.arrange(plot1, plot2, ncol=2)
plot1 <- with(plasma,
qplot(betadiet, log(betaplasma))) +
geom_abline(intercept = coef(simple_bayesian_lm)[,1], slope = coef(simple_bayesian_lm)[,2],
col=rgb(0,0,0,0.05))
newdat <- data.frame(x=seq(0, 10000, by = 100))
newmodmat <- model.matrix(~x, data=newdat)
fitmat <-  matrix(ncol=1000, nrow=nrow(newdat))
for(i in 1:1000) fitmat[,i] <- newmodmat %*% coef(simple_bayesian_lm)[i,]
plot2 <- with(plasma,
qplot(betadiet, log(betaplasma))) +
geom_smooth(aes(x = newdat$x, y = apply(fitmat, 1, quantile, probs = c(0.025, 0.5, 0.975)),
linetype = c(2,1,2), col='black', size =c(1,1.4,1)))
grid.arrange(plot1, plot2, ncol=2)
plot1 <- with(plasma,
qplot(betadiet, log(betaplasma))) +
geom_abline(intercept = coef(simple_bayesian_lm)[,1], slope = coef(simple_bayesian_lm)[,2],
col=rgb(0,0,0,0.05))
newdat <- data.frame(x=seq(0, 10000, by = 100))
newmodmat <- model.matrix(~x, data=newdat)
fitmat <-  matrix(ncol=1000, nrow=nrow(newdat))
for(i in 1:1000) fitmat[,i] <- newmodmat %*% coef(simple_bayesian_lm)[i,]
plot2 <- with(plasma,
qplot(betadiet, log(betaplasma))) +
geom_smooth(aes(x = newdat$x, y = apply(fitmat, 1, quantile, probs = c(0.025, 0.5, 0.975)),
linetype = 'dashed', col='black', size = 1))
grid.arrange(plot1, plot2, ncol=2)
plot1 <- with(plasma,
qplot(betadiet, log(betaplasma))) +
geom_abline(intercept = coef(simple_bayesian_lm)[,1], slope = coef(simple_bayesian_lm)[,2],
col=rgb(0,0,0,0.05))
newdat <- data.frame(x=seq(0, 10000, by = 100))
newmodmat <- model.matrix(~x, data=newdat)
fitmat <-  matrix(ncol=1000, nrow=nrow(newdat))
for(i in 1:1000) fitmat[,i] <- newmodmat %*% coef(simple_bayesian_lm)[i,]
plot2 <- with(plasma,
qplot(betadiet, log(betaplasma))) +
geom_smooth(aes(x = newdat$x, y = apply(fitmat, 1, quantile, probs = 0.025),
size = 1))
grid.arrange(plot1, plot2, ncol=2)
plot1 <- with(plasma,
qplot(betadiet, log(betaplasma))) +
geom_abline(intercept = coef(simple_bayesian_lm)[,1], slope = coef(simple_bayesian_lm)[,2],
col=rgb(0,0,0,0.05))
newdat <- data.frame(x=seq(0, 10000, by = 100))
newmodmat <- model.matrix(~x, data=newdat)
fitmat <-  matrix(ncol=1000, nrow=nrow(newdat))
for(i in 1:1000) fitmat[,i] <- newmodmat %*% coef(simple_bayesian_lm)[i,]
plot2 <- with(plasma,
qplot(betadiet, log(betaplasma))) +
geom_smooth(aes(x = newdat$x, y = apply(fitmat, 1, quantile, probs = 0.025),
size = 0.1))
grid.arrange(plot1, plot2, ncol=2)
plot1 <- with(plasma,
qplot(betadiet, log(betaplasma))) +
geom_abline(intercept = coef(simple_bayesian_lm)[,1], slope = coef(simple_bayesian_lm)[,2],
col=rgb(0,0,0,0.05))
newdat <- data.frame(x=seq(0, 10000, by = 100))
newmodmat <- model.matrix(~x, data=newdat)
fitmat <-  matrix(ncol=1000, nrow=nrow(newdat))
for(i in 1:1000) fitmat[,i] <- newmodmat %*% coef(simple_bayesian_lm)[i,]
plot2 <- with(plasma,
qplot(betadiet, log(betaplasma))) +
geom_smooth(aes(x = newdat$x, y = apply(fitmat, 1, quantile, probs = 0.025)), size = 1)
grid.arrange(plot1, plot2, ncol=2)
plot1 <- with(plasma,
qplot(betadiet, log(betaplasma))) +
geom_abline(intercept = coef(simple_bayesian_lm)[,1], slope = coef(simple_bayesian_lm)[,2],
col=rgb(0,0,0,0.05))
newdat <- data.frame(x=seq(0, 10000, by = 100))
newmodmat <- model.matrix(~x, data=newdat)
fitmat <-  matrix(ncol=1000, nrow=nrow(newdat))
for(i in 1:1000) fitmat[,i] <- newmodmat %*% coef(simple_bayesian_lm)[i,]
plot2 <- with(plasma,
qplot(betadiet, log(betaplasma))) +
geom_smooth(aes(x = newdat$x, y = apply(fitmat, 1, quantile, probs = 0.025)), size = 1,
color = 'black')
grid.arrange(plot1, plot2, ncol=2)
plot1 <- with(plasma,
qplot(betadiet, log(betaplasma))) +
geom_abline(intercept = coef(simple_bayesian_lm)[,1], slope = coef(simple_bayesian_lm)[,2],
col=rgb(0,0,0,0.05))
newdat <- data.frame(x=seq(0, 10000, by = 100))
newmodmat <- model.matrix(~x, data=newdat)
fitmat <-  matrix(ncol=1000, nrow=nrow(newdat))
for(i in 1:1000) fitmat[,i] <- newmodmat %*% coef(simple_bayesian_lm)[i,]
plot2 <- with(plasma,
qplot(betadiet, log(betaplasma))) +
geom_smooth(aes(x = newdat$x, y = apply(fitmat, 1, quantile, probs = 0.025)), size = 0.5,
color = 'black', linetype = 'dashed')
grid.arrange(plot1, plot2, ncol=2)
plot1 <- with(plasma,
qplot(betadiet, log(betaplasma))) +
geom_abline(intercept = coef(simple_bayesian_lm)[,1], slope = coef(simple_bayesian_lm)[,2],
col=rgb(0,0,0,0.05))
newdat <- data.frame(x=seq(0, 10000, by = 100))
newmodmat <- model.matrix(~x, data=newdat)
fitmat <-  matrix(ncol=1000, nrow=nrow(newdat))
for(i in 1:1000) fitmat[,i] <- newmodmat %*% coef(simple_bayesian_lm)[i,]
plot2 <- with(plasma,
qplot(betadiet, log(betaplasma))) +
geom_smooth(aes(x = newdat$x, y = apply(fitmat, 1, quantile, probs = 0.025)), size = 0.5,
color = 'black', linetype = 'dashed')+
geom_smooth(aes(x = newdat$x, y = apply(fitmat, 1, quantile, probs = 0.5)), size = 1,
color = 'black', linetype = 'solid')+
geom_smooth(aes(x = newdat$x, y = apply(fitmat, 1, quantile, probs = 0.975)), size = 0.5,
color = 'black', linetype = 'dashed')+
grid.arrange(plot1, plot2, ncol=2)
plot1 <- with(plasma,
qplot(betadiet, log(betaplasma))) +
geom_abline(intercept = coef(simple_bayesian_lm)[,1], slope = coef(simple_bayesian_lm)[,2],
col=rgb(0,0,0,0.05))
newdat <- data.frame(x=seq(0, 10000, by = 100))
newmodmat <- model.matrix(~x, data=newdat)
fitmat <-  matrix(ncol=1000, nrow=nrow(newdat))
for(i in 1:1000) fitmat[,i] <- newmodmat %*% coef(simple_bayesian_lm)[i,]
plot2 <- with(plasma,
qplot(betadiet, log(betaplasma))) +
geom_smooth(aes(x = newdat$x, y = apply(fitmat, 1, quantile, probs = 0.025)), size = 0.5,
color = 'black', linetype = 'dashed')+
geom_smooth(aes(x = newdat$x, y = apply(fitmat, 1, quantile, probs = 0.5)), size = 1,
color = 'black', linetype = 'solid')+
geom_smooth(aes(x = newdat$x, y = apply(fitmat, 1, quantile, probs = 0.975)), size = 0.5,
color = 'black', linetype = 'dashed')
grid.arrange(plot1, plot2, ncol=2)
newdat <- data.frame(x=seq(0, 10000, by = 100))
newmodmat <- model.matrix(~x, data=newdat)
fitmat <-  matrix(ncol=1000, nrow=nrow(newdat))
for(i in 1:1000) fitmat[,i] <- newmodmat %*% coef(simple_bayesian_lm)[i,]
newy <-  matrix(ncol=1000, nrow = nrow(newdat))
for(i in 1:1000) newy[,i] <-  rnorm(nrow(newdat), mean = fitmat[,i],
sd=simple_bayesian_lm@sigma[i])
require(gridExtra)
plot1 <- with(plasma,
qplot(betadiet, log(betaplasma))) +
geom_abline(intercept = coef(simple_bayesian_lm)[,1], slope = coef(simple_bayesian_lm)[,2],
col=rgb(0,0,0,0.05))
newdat <- data.frame(x=seq(0, 10000, by = 100))
newmodmat <- model.matrix(~x, data=newdat)
fitmat <-  matrix(ncol=1000, nrow=nrow(newdat))
for(i in 1:1000) fitmat[,i] <- newmodmat %*% coef(simple_bayesian_lm)[i,]
plot2 <- with(plasma,
qplot(betadiet, log(betaplasma))) +
geom_smooth(aes(x = newdat$x, y = apply(fitmat, 1, quantile, probs = 0.025)), size = 0.5,
color = 'black', linetype = 'dotted')+
geom_smooth(aes(x = newdat$x, y = apply(fitmat, 1, quantile, probs = 0.5)), size = 1,
color = 'black', linetype = 'solid')+
geom_smooth(aes(x = newdat$x, y = apply(fitmat, 1, quantile, probs = 0.975)), size = 0.5,
color = 'black', linetype = 'dotted')
grid.arrange(plot1, plot2, ncol=2)
newdat <- data.frame(x=seq(0, 10000, by = 100))
newmodmat <- model.matrix(~x, data=newdat)
fitmat <-  matrix(ncol=1000, nrow=nrow(newdat))
for(i in 1:1000) fitmat[,i] <- newmodmat %*% coef(simple_bayesian_lm)[i,]
newy <-  matrix(ncol=1000, nrow = nrow(newdat))
for(i in 1:1000) newy[,i] <-  rnorm(nrow(newdat), mean = fitmat[,i],
sd=simple_bayesian_lm@sigma[i])
plot2 +
geom_smooth(aes(x = newdat$x, y = apply(newy, 1, quantile, probs = 0.025)), size = 0.5,
color = 'black', linetype = 'dashed')
newdat <- data.frame(x=seq(0, 10000, by = 100))
newmodmat <- model.matrix(~x, data=newdat)
fitmat <-  matrix(ncol=1000, nrow=nrow(newdat))
for(i in 1:1000) fitmat[,i] <- newmodmat %*% coef(simple_bayesian_lm)[i,]
newy <-  matrix(ncol=1000, nrow = nrow(newdat))
for(i in 1:1000) newy[,i] <-  rnorm(nrow(newdat), mean = fitmat[,i],
sd=simple_bayesian_lm@sigma[i])
plot2 +
geom_smooth(aes(x = newdat$x, y = apply(newy, 1, quantile, probs = 0.025)), size = 0.5,
color = 'black', linetype = 'dashed')+
geom_smooth(aes(x = newdat$x, y = apply(newy, 1, quantile, probs = 0.975)), size = 0.5,
color = 'black', linetype = 'dashed')
cat('Probability a future observation with x = 5000 is higher than 3:\n')
sum(newy[newdat$x==5000,]>3)/1000
cat('Probability a future observation with x = 5000 is higher than 3:\n')
sum(newy[newdat$x==5000,]>5)/1000
library(arm)
?bayesglm
?bayeslm
?bayesglm
library(arm)
baymod <- bayesglm(log(betaplasma) ~ betadiet, data = plasma, subset=betaplasma>0)
library(arm)
baymod <- bayesglm(log(betaplasma) ~ betadiet, data = plasma)
library(arm)
baymod <- bayesglm(log(betaplasma) ~ betadiet,
prior.scale=Inf, prior.df=Inf,
data = plasma)
library(arm)
plasma2 <- subset(plasma, betaplasma>0)
baymod <- bayesglm(log(betaplasma) ~ betadiet,
prior.scale=Inf, prior.df=Inf,
data = plasma2)
library(arm)
plasma2 <- subset(plasma, betaplasma>0)
baymod <- bayesglm(log(betaplasma) ~ betadiet,
prior.scale=Inf, prior.df=Inf,
data = plasma2)
display(baymod)
library(arm)
plasma2 <- subset(plasma, betaplasma>0)
baymod <- bayesglm(log(betaplasma) ~ betadiet,
prior.scale=Inf, prior.df=Inf,
data = plasma2)
display(baymod)
print(baymod)
simple_bayesian_lm
summary(simple_bayesian_lm)
print(simple_bayesian_lm)
print(baymod)
# http://biostat.mc.vanderbilt.edu/wiki/Main/DataSets?CGISESSID=10713f6d891653ddcbb7ddbdd9cffb79
load('data\\plasma.RData')
load('data\\plasma.RData')
library(ggplot2)
with(plasma,
qplot(log(betaplasma), betadiet)+geom_smooth(method=lm, se=F))
library(arm)
mod_f <- lm(log(betaplasma) ~ betadiet, data = plasma, subset=betaplasma>0)
arm::display(mod_f)
confint(mod_f)
mod_f <- lm(log(betaplasma) ~ betadiet, data = plasma, subset=betaplasma>0)
simple_bayesian_lm <- sim(mod_f, n.sims = 1000)
cat('Credible intervals for the model parameters:\n')
apply(coef(simple_bayesian_lm), 2, quantile, prob = c(0.025, 0.975))
cat('\nCredible interval for the estimated residual standard deviation:\n')
quantile(simple_bayesian_lm@sigma, prob = c(0.025, 0.975))
cat('Probability the slope parameter is larger than 0:\n')
sum(coef(simple_bayesian_lm)[,2]>0)/1000
cat('Probability the slope parameter is larger than 0.0001:\n')
sum(coef(simple_bayesian_lm)[,2]>.0001)/1000
require(gridExtra)
plot1 <- with(plasma,
qplot(betadiet, log(betaplasma))) +
geom_abline(intercept = coef(simple_bayesian_lm)[,1], slope = coef(simple_bayesian_lm)[,2],
col=rgb(0,0,0,0.05))
newdat <- data.frame(x=seq(0, 10000, by = 100))
newmodmat <- model.matrix(~x, data=newdat)
fitmat <-  matrix(ncol=1000, nrow=nrow(newdat))
for(i in 1:1000) fitmat[,i] <- newmodmat %*% coef(simple_bayesian_lm)[i,]
plot2 <- with(plasma,
qplot(betadiet, log(betaplasma))) +
geom_smooth(aes(x = newdat$x, y = apply(fitmat, 1, quantile, probs = 0.025)), size = 0.5,
color = 'black', linetype = 'dotted')+
geom_smooth(aes(x = newdat$x, y = apply(fitmat, 1, quantile, probs = 0.5)), size = 1,
color = 'black', linetype = 'solid')+
geom_smooth(aes(x = newdat$x, y = apply(fitmat, 1, quantile, probs = 0.975)), size = 0.5,
color = 'black', linetype = 'dotted')
grid.arrange(plot1, plot2, ncol=2)
newdat <- data.frame(x=seq(0, 10000, by = 100))
newmodmat <- model.matrix(~x, data=newdat)
fitmat <-  matrix(ncol=1000, nrow=nrow(newdat))
for(i in 1:1000) fitmat[,i] <- newmodmat %*% coef(simple_bayesian_lm)[i,]
newy <-  matrix(ncol=1000, nrow = nrow(newdat))
for(i in 1:1000) newy[,i] <-  rnorm(nrow(newdat), mean = fitmat[,i],
sd=simple_bayesian_lm@sigma[i])
plot2 +
geom_smooth(aes(x = newdat$x, y = apply(newy, 1, quantile, probs = 0.025)), size = 0.5,
color = 'black', linetype = 'dashed')+
geom_smooth(aes(x = newdat$x, y = apply(newy, 1, quantile, probs = 0.975)), size = 0.5,
color = 'black', linetype = 'dashed')
cat('Probability a future observation with x = 5000 is higher than 5:\n')
sum(newy[newdat$x==5000,]>5)/1000
library(ggplot2)
require(gridExtra)
theta <- rnorm(1e5, mean = 0, sd = 500)
d <- data.frame(theta, y = dnorm(theta, mean = 0, sd = 500), clr = abs(theta) > 250)
plot1 <- ggplot(d, aes(x = theta, y = y)) +
geom_line(show.legend = FALSE) +
scale_y_continuous(name = "Density",  expand = c(0,0)) +
scale_x_continuous(name = expression(theta), limits=c(-200,200))+
ggtitle(expression(Normal(0, 500^2))) +
theme(plot.title = element_text(size=10, hjust = 0.5))
plot2 <- ggplot(d, aes(x = theta, fill = clr)) +
geom_histogram(binwidth = 5, show.legend = FALSE) +
scale_y_continuous(name = "", labels = NULL, expand = c(0,0)) +
scale_x_continuous(name = expression(theta), breaks = c(-1000, -250, 250, 1000))
grid.arrange(plot1, plot2, ncol=2)
bayesglm
dim(plasma)
plasma_g0 <- subset(plasma, betaplasma>0)
plasma_g0 <- subset(plasma, betaplasma>0)
plasma_dat <- list(N = 314 , #specify number of observations as a scalar
log_betaplasma = log(plasma_g0$betaplasma), # data vector
betadiet = plasma_g0$betadiet # data vector (predictor)
)
model_code = 'data {
// First we declare all of our variables in the data block
int<lower=0> N;// Number of observations
vector[N] log_betaplasma; //Specify the outcome as a vector
vector[N] betadiet;  //Specify the covariate as a vector
}
parameters {
vector[2] beta; // Betas are a vector of length 2 (intercept and slope)
real<lower=0> sigma; //error parameter
}
model {
//Priors
beta[1] ~ normal(0, 10); //intercept
beta[2] ~ normal(0, 2.5); //slope
sigma ~ dcauchy(0, 2); //error
log_betaplasma ~ normal(beta[1] + beta[2] * betadiet, sigma);
}'
fit_stan <- stan(model_code = earn_code, data = earn_dat,
warmup = 100,
iter = 1000,
chains = 4)
model_string = 'data {
// First we declare all of our variables in the data block
int<lower=0> N;// Number of observations
vector[N] log_betaplasma; //Specify the outcome as a vector
vector[N] betadiet;  //Specify the covariate as a vector
}
parameters {
vector[2] beta; // Betas are a vector of length 2 (intercept and slope)
real<lower=0> sigma; //error parameter
}
model {
//Priors
beta[1] ~ normal(0, 10); //intercept
beta[2] ~ normal(0, 2.5); //slope
sigma ~ dcauchy(0, 2); //error
log_betaplasma ~ normal(beta[1] + beta[2] * betadiet, sigma);
}'
library(rstan)
install.packages("rstan")
library(rstan)
stanDso <- stan_model( model_code=modelString )
library(rstan)
stanDso <- stan_model( model_code = model_string )
model_string = 'data {
// First we declare all of our variables in the data block
int<lower=0> N;// Number of observations
vector[N] log_betaplasma; //Specify the outcome as a vector
vector[N] betadiet;  //Specify the covariate as a vector
}
parameters {
vector[2] beta; // Betas are a vector of length 2 (intercept and slope)
real<lower=0> sigma; //error parameter
}
model {
//Priors
beta[1] ~ normal(0, 10); //intercept
beta[2] ~ normal(0, 5); //slope
sigma ~ cauchy(0, 5); //error
log_betaplasma ~ normal(beta[1] + beta[2] * betadiet, sigma);
}'
library(rstan)
stanDso <- stan_model( model_code = model_string )
#fit_stan <- stan(model_code = earn_code, data = earn_dat,
warmup = 100,
stanDso
stanFit <- sampling(object = stanDso,
data = plasma_dat,
chains = 3, iter = 9000, warmup = 1000, thin = 1)
stanFit <- sampling(object = stanDso,
data = plasma_dat,
chains = 3, iter = 9000, warmup = 1000, thin = 1)
samples <- extract(stanFit)
beta_post <- samples[['beta']]
beta_post
qplot(beta_post[,1]) # intercept posterior samples
qplot(beta_post[,2]) # slope posterior samples
qplot(betadiet,log_betaplasma)+
geom_smooth(method=lm,se=F)+
geom_abline(intercept=int,slope=slope,color='red')
int <- median(beta_post[,1]) # posterior intercept estimate
slope <- median(beta_post[,2])# posterior slope estimate
qplot(betadiet,log_betaplasma)+
geom_smooth(method=lm,se=F)+
geom_abline(intercept=int,slope=slope,color='red')
qplot(plasma_g0$betadiet,log(plasma_g0$betaplasma))+
geom_smooth(method=lm,se=F)+
geom_abline(intercept=int,slope=slope,color='red')
traceplot(stanFit)
print(stanFit)
library(stargazer)
stargazer(stanFit)
stargazer(stanFit, type ='html')
stargazer(print(stanFit), type ='html')
plot(print(stanFit))
save(stanDso, file='lm1_stan.RData')
stanFit <- sampling(object = stanDso,
data = plasma_dat,
chains = 3, iter = 9000, warmup = 1000, thin = 1)
traceplot(stanFit)
stan::traceplot(stanFit)
rstan::traceplot(stanFit)
?traceplot
traceplot(stanFit, ncol = 1)
traceplot(stanFit, ncol = 1)
traceplot(stanFit, inc_warmup= T, ncol = 1)
plot(stanFit, pars=c(beta, sigma))
plot(stanFit, pars=c('beta', 'sigma'))
install.packages("glmer2stan")
install.packages('devtools')
install_github('rmcelreath/glmer2stan')
library(devtools)
install_github("rmcelreath/rethinking")
install_github('rmcelreath/glmer2stan')
