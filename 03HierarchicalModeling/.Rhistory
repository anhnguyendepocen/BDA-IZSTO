load('R\\cortbowl.RData')
library(knitr)
print(kable(head(cortbowl)))
cortbowl$totCortlog <- log(cortbowl$totCort)
cortbowl$Ring <- as.integer(as.factor(cortbowl$Ring))
cortbowl$Age_z <- scale(cortbowl$Age)
library(rstan)
library(glmer2stan)
my_model <- '
data{
int N;
real totCortlog[N];
real ImplantP[N];
real days20[N];
real daysbefore[N];
real Age_z[N];
int Ring[N];
real ImplantP_X_days20[N];
real ImplantP_X_daysbefore[N];
int N_Ring;
}
transformed data{
vector[2] zeros_Ring;
for ( i in 1:2 ) zeros_Ring[i] <- 0;
}
parameters{
real Intercept;
real beta_ImplantP;
real beta_days20;
real beta_daysbefore;
real beta_Age_z;
real beta_ImplantP_X_days20;
real beta_ImplantP_X_daysbefore;
real<lower=0> sigma;
vector[2] vary_Ring[N_Ring];
vector<lower=0>[2] sigma_Ring;
corr_matrix[2] Rho_Ring;
}
transformed parameters{
cov_matrix[2] Sigma_Ring;
Sigma_Ring <- diag_matrix(sigma_Ring) * Rho_Ring * diag_matrix(sigma_Ring);
}
model{
real vary[N];
real glm[N];
// Priors
Intercept ~ normal( 0 , 100 );
beta_ImplantP ~ normal( 0 , 100 );
beta_days20 ~ normal( 0 , 100 );
beta_daysbefore ~ normal( 0 , 100 );
beta_Age_z ~ normal( 0 , 100 );
beta_ImplantP_X_days20 ~ normal( 0 , 100 );
beta_ImplantP_X_daysbefore ~ normal( 0 , 100 );
sigma_Ring ~ cauchy( 0 , 5 );
Rho_Ring ~ lkj_corr( 1.5 );
sigma ~ cauchy( 0,5 );
// Varying effects
for ( j in 1:N_Ring ) vary_Ring[j] ~ multi_normal( zeros_Ring , Sigma_Ring );
// Fixed effects
for ( i in 1:N ) {
vary[i] <- vary_Ring[Ring[i],1]
+ vary_Ring[Ring[i],2] * Age_z[i];
glm[i] <- vary[i] + Intercept
+ beta_ImplantP * ImplantP[i]
+ beta_days20 * days20[i]
+ beta_daysbefore * daysbefore[i]
+ beta_Age_z * Age_z[i]
+ beta_ImplantP_X_days20 * ImplantP_X_days20[i]
+ beta_ImplantP_X_daysbefore * ImplantP_X_daysbefore[i];
}
totCortlog ~ normal( glm , sigma );
}
generated quantities{
real dev;
real vary[N];
real glm[N];
dev <- 0;
for ( i in 1:N ) {
vary[i] <- vary_Ring[Ring[i],1]
+ vary_Ring[Ring[i],2] * Age_z[i];
glm[i] <- vary[i] + Intercept
+ beta_ImplantP * ImplantP[i]
+ beta_days20 * days20[i]
+ beta_daysbefore * daysbefore[i]
+ beta_Age_z * Age_z[i]
+ beta_ImplantP_X_days20 * ImplantP_X_days20[i]
+ beta_ImplantP_X_daysbefore * ImplantP_X_daysbefore[i];
dev <- dev + (-2) * normal_log( totCortlog[i] , glm[i] , sigma );
}
}
'
my_stan_rs_prior <- myglmer2stan(totCortlog ~ Implant + days + Age_z + Implant:days +  (Age_z|Ring), varpriors = 'weak',
data = cortbowl,
calcWAIC = T,
warmup = 500,
iter = 1000,
chains = 1,
mymodel = my_model
)
library(rstan)
library(glmer2stan)
source('R\\myglmer2stan.R')
my_model <- '
data{
int N;
real totCortlog[N];
real ImplantP[N];
real days20[N];
real daysbefore[N];
real Age_z[N];
int Ring[N];
real ImplantP_X_days20[N];
real ImplantP_X_daysbefore[N];
int N_Ring;
}
transformed data{
vector[2] zeros_Ring;
for ( i in 1:2 ) zeros_Ring[i] <- 0;
}
parameters{
real Intercept;
real beta_ImplantP;
real beta_days20;
real beta_daysbefore;
real beta_Age_z;
real beta_ImplantP_X_days20;
real beta_ImplantP_X_daysbefore;
real<lower=0> sigma;
vector[2] vary_Ring[N_Ring];
vector<lower=0>[2] sigma_Ring;
corr_matrix[2] Rho_Ring;
}
transformed parameters{
cov_matrix[2] Sigma_Ring;
Sigma_Ring <- diag_matrix(sigma_Ring) * Rho_Ring * diag_matrix(sigma_Ring);
}
model{
real vary[N];
real glm[N];
// Priors
Intercept ~ normal( 0 , 100 );
beta_ImplantP ~ normal( 0 , 100 );
beta_days20 ~ normal( 0 , 100 );
beta_daysbefore ~ normal( 0 , 100 );
beta_Age_z ~ normal( 0 , 100 );
beta_ImplantP_X_days20 ~ normal( 0 , 100 );
beta_ImplantP_X_daysbefore ~ normal( 0 , 100 );
sigma_Ring ~ cauchy( 0 , 5 );
Rho_Ring ~ lkj_corr( 1.5 );
sigma ~ cauchy( 0,5 );
// Varying effects
for ( j in 1:N_Ring ) vary_Ring[j] ~ multi_normal( zeros_Ring , Sigma_Ring );
// Fixed effects
for ( i in 1:N ) {
vary[i] <- vary_Ring[Ring[i],1]
+ vary_Ring[Ring[i],2] * Age_z[i];
glm[i] <- vary[i] + Intercept
+ beta_ImplantP * ImplantP[i]
+ beta_days20 * days20[i]
+ beta_daysbefore * daysbefore[i]
+ beta_Age_z * Age_z[i]
+ beta_ImplantP_X_days20 * ImplantP_X_days20[i]
+ beta_ImplantP_X_daysbefore * ImplantP_X_daysbefore[i];
}
totCortlog ~ normal( glm , sigma );
}
generated quantities{
real dev;
real vary[N];
real glm[N];
dev <- 0;
for ( i in 1:N ) {
vary[i] <- vary_Ring[Ring[i],1]
+ vary_Ring[Ring[i],2] * Age_z[i];
glm[i] <- vary[i] + Intercept
+ beta_ImplantP * ImplantP[i]
+ beta_days20 * days20[i]
+ beta_daysbefore * daysbefore[i]
+ beta_Age_z * Age_z[i]
+ beta_ImplantP_X_days20 * ImplantP_X_days20[i]
+ beta_ImplantP_X_daysbefore * ImplantP_X_daysbefore[i];
dev <- dev + (-2) * normal_log( totCortlog[i] , glm[i] , sigma );
}
}
'
my_stan_rs_prior <- myglmer2stan(totCortlog ~ Implant + days + Age_z + Implant:days +  (Age_z|Ring), varpriors = 'weak',
data = cortbowl,
calcWAIC = T,
warmup = 500,
iter = 1000,
chains = 1,
mymodel = my_model
)
stanmer(my_stan_rs_prior)
cortbowl$totCortlog <- log(cortbowl$totCort)
cortbowl$Ring <- as.integer(as.factor(cortbowl$Ring))
cortbowl$Age_z <- scale(cortbowl$Age)
my_stan_rs <- myglmer2stan(totCortlog ~ Implant + days + Age_z + Implant:days +  (Age_z|Ring),
varpriors = 'weak',
data = cortbowl,
calcWAIC = T,
warmup = 500,
iter = 1000,
chains = 2, sample = T)
show(my_stan_rs)
stanmer(my_stan_rs)
stanmer(my_stan_rs_prior)
purl('main.Rmd')
getwd()
