S4 class stanmodel 'totCortlog ~ Implant + days + Implant:days + (1 | Ring) [gaussian]' coded as follows:
data{
    int N;
    real totCortlog[N];
    real ImplantP[N];
    real days20[N];
    real daysbefore[N];
    int Ring[N];
    real ImplantP_X_days20[N];
    real ImplantP_X_daysbefore[N];
    int N_Ring;
}

parameters{
    real Intercept;
    real beta_ImplantP;
    real beta_days20;
    real beta_daysbefore;
    real beta_ImplantP_X_days20;
    real beta_ImplantP_X_daysbefore;
    real<lower=0> sigma;
    real vary_Ring[N_Ring];
    real<lower=0> sigma_Ring;
}

model{
    real vary[N];
    real glm[N];
    // Priors
    Intercept ~ normal( 0 , 100 );
    beta_ImplantP ~ normal( 0 , 100 );
    beta_days20 ~ normal( 0 , 100 );
    beta_daysbefore ~ normal( 0 , 100 );
    beta_ImplantP_X_days20 ~ normal( 0 , 100 );
    beta_ImplantP_X_daysbefore ~ normal( 0 , 100 );
    sigma_Ring ~ uniform( 0 , 100 );
    sigma ~ uniform( 0 , 100 );
    // Varying effects
    for ( j in 1:N_Ring ) vary_Ring[j] ~ normal( 0 , sigma_Ring );
    // Fixed effects
    for ( i in 1:N ) {
        vary[i] <- vary_Ring[Ring[i]];
        glm[i] <- vary[i] + Intercept
                + beta_ImplantP * ImplantP[i]
                + beta_days20 * days20[i]
                + beta_daysbefore * daysbefore[i]
                + beta_ImplantP_X_days20 * ImplantP_X_days20[i]
                + beta_ImplantP_X_daysbefore * ImplantP_X_daysbefore[i];
    }
    totCortlog ~ normal( glm , sigma );
}

generated quantities{
    real dev;
    real vary[N];
    real glm[N];
    dev <- 0;
    for ( i in 1:N ) {
        vary[i] <- vary_Ring[Ring[i]];
        glm[i] <- vary[i] + Intercept
                + beta_ImplantP * ImplantP[i]
                + beta_days20 * days20[i]
                + beta_daysbefore * daysbefore[i]
                + beta_ImplantP_X_days20 * ImplantP_X_days20[i]
                + beta_ImplantP_X_daysbefore * ImplantP_X_daysbefore[i];
        dev <- dev + (-2) * normal_log( totCortlog[i] , glm[i] , sigma );
    }
}
  
