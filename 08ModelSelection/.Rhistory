dev <- 0;
for ( i in 1:N ) {
vary_rep[i] <- vary_Ring[Ring[i]];
glm_rep[i] <- vary_rep[i] + Intercept
+ beta_ImplantP * ImplantP[i]
+ beta_days20 * days20[i]
+ beta_daysbefore * daysbefore[i]
+ beta_Age_z * Age_z[i]
+ beta_ImplantP_X_days20 * ImplantP_X_days20[i]
+ beta_ImplantP_X_daysbefore * ImplantP_X_daysbefore[i];
y_rep <- normal_rng( glm_rep , sigma );
dev <- dev + (-2) * normal_log( totCortlog[i] , glm_rep[i] , sigma );
}
}
'
library(rstan)
stan_dso <- stan_model(model_code=model_string)
launch_shinystan(stanFit)
model_string <- '
data{
int N;
real totCortlog[N];
real ImplantP[N];
real days20[N];
real daysbefore[N];
real Age_z[N];
int Brood[N];
int Ring[N];
real ImplantP_X_days20[N];
real ImplantP_X_daysbefore[N];
int N_Brood;
int N_Ring;
}
parameters{
real Intercept;
real beta_ImplantP;
real beta_days20;
real beta_daysbefore;
real beta_Age_z;
real beta_ImplantP_X_days20;
real beta_ImplantP_X_daysbefore;
real<lower=0> sigma;
real vary_Ring[N_Ring];
real vary_Brood[N_Brood];
real<lower=0> sigma_Ring;
real<lower=0> sigma_Brood;
}
model{
real vary[N];
real glm[N];
// Priors
Intercept ~ normal( 0 , 100 );
beta_ImplantP ~ normal( 0 , 100 );
beta_days20 ~ normal( 0 , 100 );
beta_daysbefore ~ normal( 0 , 100 );
beta_Age_z ~ normal( 0 , 100 );
beta_ImplantP_X_days20 ~ normal( 0 , 100 );
beta_ImplantP_X_daysbefore ~ normal( 0 , 100 );
sigma_Ring ~ uniform( 0 , 100 );
sigma_Brood ~ uniform( 0 , 100 );
sigma ~ uniform( 0 , 100 );
// Varying effects
for ( j in 1:N_Ring ) vary_Ring[j] ~ normal( 0 , sigma_Ring );
for ( j in 1:N_Brood ) vary_Brood[j] ~ normal( 0 , sigma_Brood );
// Fixed effects
for ( i in 1:N ) {
vary[i] <- vary_Ring[Ring[i]] + vary_Brood[Brood[i]];
glm[i] <- vary[i] + Intercept
+ beta_ImplantP * ImplantP[i]
+ beta_days20 * days20[i]
+ beta_daysbefore * daysbefore[i]
+ beta_Age_z * Age_z[i]
+ beta_ImplantP_X_days20 * ImplantP_X_days20[i]
+ beta_ImplantP_X_daysbefore * ImplantP_X_daysbefore[i];
}
totCortlog ~ normal( glm , sigma );
}
generated quantities{
real dev;
real vary_rep[N];
real glm_rep[N];
vector[N] y_rep;
dev <- 0;
for ( i in 1:N ) {
vary_rep[i] <- vary_Ring[Ring[i]];
glm_rep[i] <- vary_rep[i] + Intercept
+ beta_ImplantP * ImplantP[i]
+ beta_days20 * days20[i]
+ beta_daysbefore * daysbefore[i]
+ beta_Age_z * Age_z[i]
+ beta_ImplantP_X_days20 * ImplantP_X_days20[i]
+ beta_ImplantP_X_daysbefore * ImplantP_X_daysbefore[i];
y_rep <- normal_rng( glm_rep , sigma );
dev <- dev + (-2) * normal_log( totCortlog[i] , glm_rep[i] , sigma );
}
}
'
library(rstan)
stan_dso <- stan_model(model_code=model_string)
model_string <- '
data{
int N;
real totCortlog[N];
real ImplantP[N];
real days20[N];
real daysbefore[N];
real Age_z[N];
int Brood[N];
int Ring[N];
real ImplantP_X_days20[N];
real ImplantP_X_daysbefore[N];
int N_Brood;
int N_Ring;
}
parameters{
real Intercept;
real beta_ImplantP;
real beta_days20;
real beta_daysbefore;
real beta_Age_z;
real beta_ImplantP_X_days20;
real beta_ImplantP_X_daysbefore;
real<lower=0> sigma;
real vary_Ring[N_Ring];
real vary_Brood[N_Brood];
real<lower=0> sigma_Ring;
real<lower=0> sigma_Brood;
}
model{
real vary[N];
real glm[N];
// Priors
Intercept ~ normal( 0 , 100 );
beta_ImplantP ~ normal( 0 , 100 );
beta_days20 ~ normal( 0 , 100 );
beta_daysbefore ~ normal( 0 , 100 );
beta_Age_z ~ normal( 0 , 100 );
beta_ImplantP_X_days20 ~ normal( 0 , 100 );
beta_ImplantP_X_daysbefore ~ normal( 0 , 100 );
sigma_Ring ~ uniform( 0 , 100 );
sigma_Brood ~ uniform( 0 , 100 );
sigma ~ uniform( 0 , 100 );
// Varying effects
for ( j in 1:N_Ring ) vary_Ring[j] ~ normal( 0 , sigma_Ring );
for ( j in 1:N_Brood ) vary_Brood[j] ~ normal( 0 , sigma_Brood );
// Fixed effects
for ( i in 1:N ) {
vary[i] <- vary_Ring[Ring[i]] + vary_Brood[Brood[i]];
glm[i] <- vary[i] + Intercept
+ beta_ImplantP * ImplantP[i]
+ beta_days20 * days20[i]
+ beta_daysbefore * daysbefore[i]
+ beta_Age_z * Age_z[i]
+ beta_ImplantP_X_days20 * ImplantP_X_days20[i]
+ beta_ImplantP_X_daysbefore * ImplantP_X_daysbefore[i];
}
totCortlog ~ normal( glm , sigma );
}
generated quantities{
real dev;
real vary_rep[N];
real glm_rep[N];
vector[N] y_rep;
dev <- 0;
for ( i in 1:N ) {
vary_rep[i] <- vary_Ring[Ring[i]];
glm_rep[i] <- vary_rep[i] + Intercept
+ beta_ImplantP * ImplantP[i]
+ beta_days20 * days20[i]
+ beta_daysbefore * daysbefore[i]
+ beta_Age_z * Age_z[i]
+ beta_ImplantP_X_days20 * ImplantP_X_days20[i]
+ beta_ImplantP_X_daysbefore * ImplantP_X_daysbefore[i];
y_rep[i] <- normal_rng( glm_rep[i] , sigma );
dev <- dev + (-2) * normal_log( totCortlog[i] , glm_rep[i] , sigma );
}
}
'
stan_dso <- stan_model(model_code=model_string)
stanFit <- sampling(object = stan_dso,
data = data_list,
chains = 1, iter = 9000,
warmup = 1000, thin = 1)
launch_shinystan(stanFit)
length(stanFit$yrep)
dim(stanFit$yrep)
dim(stanFit@yrep)
dd <- stanFit@par_dims$y_rep
dd
stanFit@sim$samples$y_rep
stanFit@sim$samples
extract(stanFit, pars='y_rep')
dim(extract(stanFit, pars='y_rep'))
dimnames(extract(stanFit, pars='y_rep'))
extract(stanFit, pars='y_rep')$y_rep
extract(stanFit, pars='y_rep')[1,]
library(glmer2stan)
?glmer2stan
data <- read.table('R\\hrtfail_data.dat')
names(data) <- c('ID', 'Treatment','Period','OED_base','DBP_base','OED','DBP')
library(xtable)
print(xtable(data[1:11,], digits=0), type='html',  html.table.attributes = "border=0")
data <- read.table('R\\hrtfail_data.dat')
names(data) <- c('ID', 'Treatment','Period','OED_base','DBP_base','OED','DBP')
library(xtable)
print(xtable(data[1:11,], digits=0), type='html',  html.table.attributes = "border=0")
library(knitr)
kable(data[1:11,])
data <- read.table('R\\hrtfail_data.dat')
names(data) <- c('ID', 'Treatment','Period','OED_base','DBP_base','OED','DBP')
library(knitr)
kable(data[1:11,])
crossover <- read.table('R\\hrtfail_data.dat')
names(data) <- c('ID', 'Treatment','Period','OED_base','DBP_base','OED','DBP')
library(knitr)
kable(data[1:11,])
library(glmer2stan)
mod_1 <- myglmer2stan(oed ~ period + treatment,
data = crossover,
Ranef = F)
library(glmer2stan)
source('R\\myglmer2stan.R')
mod_1 <- myglmer2stan(oed ~ period + treatment,
data = crossover,
Ranef = F)
names(crossover)
crossover <- read.table('R\\hrtfail_data.dat')
names(crossover) <- c('ID', 'Treatment','Period','OED_base','DBP_base','OED','DBP')
library(knitr)
kable(data[1:11,])
library(glmer2stan)
source('R\\myglmer2stan.R')
mod_1 <- myglmer2stan(oed ~ period + treatment,
data = crossover,
Ranef = F)
names(crossover)
library(glmer2stan)
source('R\\myglmer2stan.R')
mod_1 <- myglmer2stan(OED ~ Period + Treatment,
data = crossover,
Ranef = F)
crossover$OED
crossover$OED <- with(crossover,
ifelse(levels(OED)=='.', NA, as.numeric(as.character(OED))))
crossover$OED <- with(crossover,
ifelse(as.character(OED)=='.', NA, as.numeric(as.character(OED))))
crossover$OED
crossover$Treatment
crossover$Period
crossover <- read.table('R\\hrtfail_data.dat')
names(crossover) <- c('ID', 'Treatment','Period','OED_base','DBP_base','OED','DBP')
crossover$OED <- with(crossover,
ifelse(as.character(OED)=='.', NA, as.numeric(as.character(OED))))
crossover$Period <- factor(crossover$Period)
library(knitr)
kable(data[1:11,])
library(glmer2stan)
source('R\\myglmer2stan.R')
mod_1 <- myglmer2stan(OED ~ Period + Treatment,
data = crossover,
Ranef = F)
loo(mod_1)
library(loo)
loo(mod_1)
?loo
extract_log_lik(mod_1)
mod_1
?extract_log_lik
library(glmer2stan)
source('R\\myglmer2stan.R')
mod_1 <- myglmer2stan(OED ~ Period + Treatment,
data = crossover,
calcWAIC = T, calcDIC = T,
Ranef = F)
library(glmer2stan)
source('R\\myglmer2stan.R')
mod_1 <- myglmer2stan(OED ~ Period + Treatment,
data = crossover,
calcWAIC = T, calcDIC = T,
Ranef = F)
mod_1
names(crossover)
patient$ID
crossover$ID
crossover$Patient <- as.numeric(factor(crossover$ID))
crossover$Patient
names(crossover)
library(glmer2stan)
source('R\\myglmer2stan.R')
mod_1 <- myglmer2stan(OED ~ Period + Treatment + OED_base + (1|Patient),
data = crossover,
calcWAIC = T, calcDIC = T,
Ranef = T)
summary(mod_1)
stanmer(mod_1)
crossover <- read.table('R\\hrtfail_data.dat')
names(crossover) <- c('ID', 'Treatment','Period','OED_base','DBP_base','OED','DBP')
crossover$OED <- with(crossover,
ifelse(as.character(OED)=='.', NA, as.numeric(as.character(OED))))
crossover$Period <- factor(crossover$Period)
crossover$Patient <- as.numeric(factor(crossover$ID))
library(knitr)
kable(data[1:11,])
crossover <- read.table('R\\hrtfail_data.dat')
crossover
names(crossover)
read('R\\crossover.csv')
read.csv('R\\crossover.csv')
read.csv('R\\crossover.base.csv')
crossover <- read.csv('R\\crossover.base.csv')
crossover$period <- factor(crossover$period)
crossover$treatment <- as.numeric(factor(crossover$treatment))
library(knitr)
kable(data[1:11,])
crossover <- read.csv('R\\crossover.base.csv')
crossover$period <- factor(crossover$period)
crossover$treatment <- as.numeric(factor(crossover$treatment))
library(knitr)
kable(crossover[1:11,])
library(glmer2stan)
source('R\\myglmer2stan.R')
mod_4 <- myglmer2stan(OED ~ Period + Treatment + OED_base + (1|Patient),
data = crossover,
calcWAIC = T, calcDIC = T,
Ranef = T)
library(glmer2stan)
source('R\\myglmer2stan.R')
mod_4 <- myglmer2stan(oed ~ period + treatment + oedbase + (1|Patient),
data = crossover,
calcWAIC = T, calcDIC = T,
Ranef = T)
library(glmer2stan)
source('R\\myglmer2stan.R')
mod_4 <- myglmer2stan(oed ~ period + treatment + oedbase + (1|patient),
data = crossover,
calcWAIC = T, calcDIC = T,
Ranef = T)
stanmer(mod_4)
0.16^2
0.74^2
mod_4
1.97^2
stanmer2(mod_4)
source('R\\stanmer2.R')
stanmer2(mod_4)
s_pat <- extract(mod_4,'sigma_patient')
s <- extract(mod_4,'sigma')
mean(s_pat)
s_pat <- unlist(extract(mod_4,'sigma_patient'))
s <- unlist(extract(mod_4,'sigma'))
cor <- s_pat^2/(s^2+s_pat^2)
quantile(cor, probs = c(0.025, 0.5, .975))
kable(mod_4)
save(mod_4, file='mod_4.RData')
waic(mod_1)
stanmer(mod_1)
stanmer(mod_1)
327.9/2
stanmer(mod_2)
library(glmer2stan)
source('R\\myglmer2stan.R')
mod_4 <- myglmer2stan(oed ~ period + treatment + (1|patient),
data = crossover,
calcWAIC = T, calcDIC = T,
Ranef = T)
load('ouput\\mod_4.RData)
load('ouput\\mod_4.RData')
getwd()
load('output\\mod_4.RData')
stanmer(mod_4)
library(myglmer2stan)
library(glmer2stan)
stanmer(mod_4)
library(rstan)
stanmer(mod_4)
kable(stanmer(mod_4))
library(knitr)
kable(stanmer(mod_4))
kable(stanmer(mod_4))
c(paste('Model', 1:4)
paste('Model', 1:4)
crossover <- read.csv('R\\crossover.base.csv')
crossover$period <- factor(crossover$period)
crossover$treatment <- as.numeric(factor(crossover$treatment))
library(knitr)
kable(crossover[1:11,])
library(glmer2stan)
source('R\\myglmer2stan.R')
mod_1 <- myglmer2stan(oed ~ period + treatment,
data = crossover,
calcWAIC = T, calcDIC = T,
Ranef = F)
stanmer(mod_1)
1176/2
library(glmer2stan)
source('R\\myglmer2stan.R')
mod_2 <- myglmer2stan(oed ~ period + treatment + (1|patient),
data = crossover,
calcWAIC = T, calcDIC = T,
Ranef = T)
library(glmer2stan)
source('R\\myglmer2stan.R')
mod_3 <- myglmer2stan(oed ~ period + treatment + oedbase,
data = crossover,
calcWAIC = T, calcDIC = T,
Ranef = F)
load('output\\mod_4.RData')
stanmer(mod_4)
327.9/2
mod_4
resout <- data.frame(Model = paste('Model', 1:4),
WAIC = c(1184.68, 461.62, 737.32, 456 ),
pWAIC = c(4.36, 66.88, 8.03, 63.9),
DIC = c(1184.09, 469.87, 733.68, 461),
pDIC = c(3.92, 96.12, 4.88, 88.7),
lppd = c(-587.98, -163.93, -360.63, -163.95),
dev = c(1176.24, 277.63, 723.92, 283.6))
kable(resout)
library(glmer2stan)
source('R\\myglmer2stan.R')
mod_3 <- myglmer2stan(oed ~ period + treatment + oedbase + patient,
data = crossover,
calcWAIC = T, calcDIC = T,
Ranef = F)
mod_3
print(mod_3)
stanmer(mod_3)
summary(mod_3)
library(glmer2stan)
crossover2 <- crossover
crossover2$patient <- factor(crossover2$patient)
source('R\\myglmer2stan.R')
mod_3 <- myglmer2stan(oed ~ period + treatment + oedbase + patient,
data = crossover2,
calcWAIC = T, calcDIC = T,
Ranef = F)
crossover$patient
crossover <- read.csv('R\\crossover.base.csv')
crossover$period <- factor(crossover$period)
crossover$treatment <- as.numeric(factor(crossover$treatment))
library(knitr)
kable(crossover[1:11,])
crossover <- read.csv('R\\crossover.base.csv')
crossover$period <- factor(crossover$period)
crossover$treatment <- as.numeric(factor(crossover$treatment))
crossover$patient <- factor(crossover$patient)
library(knitr)
kable(crossover[1:11,])
library(glmer2stan)
source('R\\myglmer2stan.R')
mod_1 <- myglmer2stan(oed ~ period + treatment + patient,
data = crossover,
calcWAIC = T, calcDIC = T,
Ranef = F)
stanmer(mod_1)
library(glmer2stan)
source('R\\myglmer2stan.R')
mod_3 <- myglmer2stan(oed ~ period + treatment + oedbase + patient,
data = crossover,
calcWAIC = T, calcDIC = T,
Ranef = F)
save(mod_1, mod_2, mod_3, mod_4, file='output\\resoutStan.RData')
library(glmer2stan)
source('R\\myglmer2stan.R')
mod <- myglmer2stan(oed ~ period + treatment + oedbase + (1|patient),
data = crossover, sample = F,
calcWAIC = T, calcDIC = T,
Ranef = T)
?myglmer2stan
glmer2stan
?glmer2stan
names(crossover)
library(glmer2stan)
source('R\\myglmer2stan.R')
mod <- myglmer2stan(oed ~ period + treatment + oedbase + (1|patient),
data = crossover, sample = F,
calcWAIC = T, calcDIC = T,
Ranef = T)
library(glmer2stan)
source('R\\myglmer2stan.R')
mod <- myglmer2stan(oed ~ period + treatment + oedbase + (1|patient),
data = crossover, sample = T,
calcWAIC = T, calcDIC = T,
Ranef = T)
crossover <- read.csv('R\\crossover.base.csv')
crossover$period <- factor(crossover$period)
crossover$treatment <- as.numeric(factor(crossover$treatment))
crossover$patient <- factor(crossover$patient)
library(knitr)
kable(crossover[1:11,])
library(glmer2stan)
source('R\\myglmer2stan.R')
mod <- myglmer2stan(oed ~ period + treatment + oedbase + (1|patient),
data = crossover, sample = F,
calcWAIC = T, calcDIC = T,
Ranef = T)
crossover$patient <- as.numeric(crossover$patient)
library(glmer2stan)
source('R\\myglmer2stan.R')
mod <- myglmer2stan(oed ~ period + treatment + oedbase + (1|patient),
data = crossover, sample = F,
calcWAIC = T, calcDIC = T,
Ranef = T)
show(mod)
mod_4
mod_3@stanmodel
library(rstan)
s_pat <- unlist(extract(mod_4,'sigma_patient'))
s <- unlist(extract(mod_4,'sigma'))
load('output\\mod_4.RData')
library(glmer2stan)
stanmer(mod_4)
